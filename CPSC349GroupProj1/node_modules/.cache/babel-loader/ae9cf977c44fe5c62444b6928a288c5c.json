{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pmk06\\\\Documents\\\\GitHub\\\\CPSC349GroupProj1\\\\src\\\\StateProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from \"react\";\n/* Preparing the data layer */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StateContext = /*#__PURE__*/createContext();\n/* Higher order component used to wrap the app in the state provider that holds userData */\n\nexport const StateProvider = ({\n  reducer,\n  initialState,\n  children\n}) => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n/* Used whenever we want to pull data out from the dataLayer */\n\n_s(StateProvider, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = StateProvider;\nexport const useStateValue = () => {\n  _s2();\n\n  return useContext(StateContext);\n};\n\n_s2(useStateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["C:/Users/pmk06/Documents/GitHub/CPSC349GroupProj1/src/StateProvider.js"],"names":["React","createContext","useContext","useReducer","StateContext","StateProvider","reducer","initialState","children","useStateValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AAEA;;;AACA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAlC;AAEP;;AACA,OAAO,MAAMI,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA;AAAzB,CAAD;AAAA;;AAAA,sBACzB,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEL,UAAU,CAACG,OAAD,EAAUC,YAAV,CAAxC;AAAA,cACKC;AADL;AAAA;AAAA;AAAA;AAAA,UADyB;AAAA,CAAtB;AAMP;;GANaH,a;;KAAAA,a;AAOb,OAAO,MAAMI,aAAa,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAtB;;IAAMK,a","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n/* Preparing the data layer */\r\nexport const StateContext = createContext();\r\n\r\n/* Higher order component used to wrap the app in the state provider that holds userData */\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\n/* Used whenever we want to pull data out from the dataLayer */\r\nexport const useStateValue = () => useContext(StateContext);"]},"metadata":{},"sourceType":"module"}